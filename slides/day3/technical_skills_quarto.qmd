---
title: Quarto and Typesetting
subtitle: "Statistics for Political Science"
format: clean-revealjs
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
author:
  - name: Mason Auten
    email: mason.auten@vanderbilt.edu
    affiliations: Vanderbilt University
  - name: Patrick Buhr
    email: patrick.buhr@Vanderbilt.Edu
    affiliations: Vanderbilt University
date: today
self-contained: true
bibliography: skills_camp.bib
---

# Introduction and Roadmap

## Introduction

:::::: columns
::: column
-   In Political Science, people tend to use one of two programs:
    1.  LaTeX
    2.  Quarto
-   These tools are optional, but they will significantly improve your workflow and marketability.
-   Our advice: Pick one and learn it. Which one you pick is up to you.
:::

:::: column
**Why Can't I just Use Word?**

::: incremental
-   They are more flexible and can be automated more than programs like Word.
-   They are much easier to write math with.
-   They are a signaling device.
-   To quote one anonymous professor, "Academics are tiny, insignificant little people who will judge you for not having the accepted format of slides."
:::
::::
::::::

## Roadmap

1.  Quarto
2.  LaTex
3.  Math notation
4.  Bibliography Tools

# Quarto

## What is Quarto?

-   Quarto provides a way to combine code, results and prose all in one document [@wickham2019Advanced].

-   Quarto uses a markdown syntax. If you've used Rmarkdown or Obsidian, you're already familiar with this syntax.

    -   It's designed to be readable and easy to use.

-   You can use R, Python, Julia, and more types of code all in the same document.

-   You then render it to PDF, HTML, or a Word format.

-   You can make manuscripts, websites, presentations or more!

## Setting Up Quarto

-   If you're still traumatized from trying to set up Git, rest assured this process is much easier.

    1.  [Download Quarto](https://quarto.org/docs/get-started/).
    2.  Choose your interface: RStudio, Positron, VS Code ect.

-   That's it!

## Basics

-   A Quarto file is a plain text file that ends in .qmd.
-   It is composed of three parts [@wickham2019Advanced]:
    1.  YAML: Which tells the document how to behave and look.
    2.  Code that you use throughout from LaTex to Python that is usable in the paper.
    3.  Text

## Example

```{r}
#| label: tbl-dv
#| echo: false
#| output: false
#| tbl-cap: "Summary of Duration"
head(mtcars) |> knitr::kable()
```

````         
```r
#| echo: true
#| eval: false
#| label: tbl-dv
#| tbl-cap: "Summary of Duration"
#| fig-pos: "h"

missing_dv <- dat %>%
  select(duration_months) %>%
  miss_var_summary() 

## combine with summary data from skimr
dv_table <- dat %>%
  select(duration_months) %>%
  skim_without_charts() %>%
  select(skim_variable, numeric.mean, numeric.sd, numeric.p0, numeric.p50,numeric.p100) %>%
  left_join(missing_dv , by = c("skim_variable" = "variable")) %>%
  mutate(
    Variable = case_when(
      Variable == "duration_months" ~ "duration_months",
      TRUE ~ Variable
    )
  ) %>%
  select(Variable, `Missing %`, Mean, SD, Min, Median, Max)



# show table in output
dv_table%>%
  knitr::kable()
```
````

@tbl-dv shows the descriptive statistics of the dependent variable.

## Using Quarto

-   Papers are written pretty much as normal.
-   Here are a few simple codes you'll use:
    -   `#` for different heading levels
    -   `*word*` to italicize something.
    -   And insert a reference with `[@ref-key].`
    -   Use Markdown tables and forget that LaTex tables exist.

## Using Quarto Cont.

-   Insert code with Cmd + Option + I / Ctrl + Alt + I or type ```` ```{r} ``` ```` [@wickham2019Advanced].

-   When using code cells, there are multiple commands that you'll want to use

## Cheat Sheet

-   Here is a useful cheatsheet you might use

````         
```r
# Quarto chunk options ‚Äî copy this chunk and edit.
# Lines starting with `#|` are options; trailing comments explain them.

#| label: demo-cheatsheet         # name for cross-refs (use @demo-cheatsheet)
#| echo: true                     # show code in the output
#| eval: false                    # don't run code 
#| warning: false                 # suppress R warnings
#| message: false                 # suppress error messages
#| error: true                    # allow errors without 
#| cache: true                    # reuse results if inputs unchanged (speed up)
#| output: true                  #  show slide output
#| fig-cap: "A figure caption"    # caption (enables figure numbering)
#| fig-width: 6                   # figure size in inches
#| fig-height: 4
#| fig-align: center              # left/center/right
#| out-width: "70%"               # scale displayed figure
#| tbl-cap: "A table caption"     # caption for tables (numbering + cross-refs)

# Example code 
plot(conflict_data)          

```
````

## Yaml

-   YAML just tells your document what it is supposed to be.

``` yaml
---
title: Quarto and Typesetting
subtitle: "Statistics for Political Science"
format: clean-revealjs
html-math-method:
  method: mathjax
author:
  - name: Mason Auten
    email: mason.auten@vanderbilt.edu
    affiliations: Vanderbilt University
  - name: Patrick Buhr
    email: patrick.buhr@Vanderbilt.Edu
    affiliations: Vanderbilt University
date: today
self-contained: true
bibliography: skills_camp.bib
---
```

## Slides

-   You can make Beamer or revealjs slides in Quarto. These slides are revealjs.
-   Simply use `##` to make a new slide.
-   Use the code above to tell it what code you want to run and how.
-   Present

# LaTex

## Preamble

# Math Notation

## Introduction

- Whether you use LaTeX or Quarto, they both use the same LaTeX math notation. 
- You'll need to know this notation for problem sets and specifying the equations you use in research papers. 
- In general, surround any math object with `$x$` to have it render correctly. 
- Use `$$x$$` to have the mathematical object show on its own line. 
- We can also wrap equations in specific LaTeX formats to have them display nicely. 


## Example: Code

```latex
$$
\begin{aligned}
A + B = C \\
A - C = B
\end{aligned}
$$
```

## Example: Rendered 

$$
\begin{aligned}
A + B = C \\
A - C = B
\end{aligned}
$$

## Example: Code
- Moving to more useful examples 

```latex
$$
\begin{aligned}
E[X] &= \sum_{i=1}^n x_i p_i \\
\mathrm{Var}(X) &= E\big[(X - E[X])^2\big] \\
P(A \cap B) &= P(A) \cdot P(B) \\
\hat{\beta} &= (X^T X)^{-1} \cdot X^T Y
\end{aligned}
$$
```

## Example Display

$$
\begin{aligned}
E[X] &= \sum_{i=1}^n x_i p_i \\
\mathrm{Var}(X) &= E\big[(X - E[X])^2\big] \\
P(A \cap B) &= P(A) \cdot P(B) \\
\hat{\beta} &= (X^T X)^{-1} \cdot X^T Y
\end{aligned}
$$

## Notation References {#sec-note .scrollable}

<details>
<summary><strong>Mathematical Notation Reference</strong></summary>
| Name            | Command                | Example                   | Result        |
|-----------------|------------------------|---------------------------|---------------|
| Superscript     | `^{}`                  | `x^{2}`                    | $x^{2}$       |
| Subscript       | `_{}`                  | `x_{i}`                    | $x_{i}$       |
| Hat             | `\hat{}`               | `\hat{x}`                  | $\hat{x}$     |
| Bar             | `\bar{}`               | `\bar{x}`                  | $\bar{x}$     |
| Fraction        | `\frac{}{}`            | `\frac{1}{2}`               | $\frac{1}{2}$ |
| √ó               | `\times`               | `2 \times 3 = 6`            | $2 \times 3 = 6$ |
| √∑               | `\div`                 | `6 \div 3 = 2`              | $6 \div 3 = 2$ |
| ‚â†               | `\neq`                 | `1+1 \neq 3`                | $1+1 \neq 3$  |
| ‚â§               | `\leq`                 | `x \leq 5`                  | $x \leq 5$    |
| ‚â•               | `\geq`                 | `y \geq 10`                 | $y \geq 10$   |
| ¬±               | `\pm`                  | `1 \pm 0.5`                 | $1 \pm 0.5$   |
| ‚Üí               | `\rightarrow`          | `n \rightarrow \infty`      | $n \rightarrow \infty$ |
| ‚üÇ               | `\perp`                 | `A \perp B`                  | $A \perp B$   |
| Square Root     | `\sqrt{}`               | `\sqrt{16}`                  | $\sqrt{16}$   |
| Summation       | `\sum`                  | `\sum_{i=1}^{n} x_i`         | $\sum_{i=1}^{n} x_i$ |
| Product         | `\prod`                 | `\prod_{i=1}^{n} x_i`        | $\prod_{i=1}^{n} x_i$ |
| ‚àû               | `\infty`                | `\lim_{x \to \infty} f(x)`   | $\lim_{x \to \infty} f(x)$ |
| Œ±               | `\alpha`                | `\alpha + \beta`             | $\alpha + \beta$ |
| Œ≤               | `\beta`                 | `\beta_1 x`                  | $\beta_1 x$  |
| œá               | `\chi`                  | `\chi^2`                     | $\chi^2$     |
| Œµ               | `\epsilon`              | `\epsilon > 0`               | $\epsilon > 0$ |
| Œª               | `\lambda`               | `\lambda_{max}`              | $\lambda_{max}$ |
| Œº               | `\mu`                   | `\mu = 0`                    | $\mu = 0$    |
| œâ               | `\omega`                | `\omega t`                   | $\omega t$   |
| œÄ               | `\pi`                   | `\pi r^2`                    | $\pi r^2$    |
| œÉ               | `\sigma`                | `\sigma^2`                   | $\sigma^2$  |
| œÑ               | `\tau`                  | `\tau = 1`                   | $\tau = 1$  |
| Œî               | `\Delta`                | `\Delta y`                   | $\Delta y$  |
| ùí©               | `\mathcal{N}`           | `\mathcal{N}(\mu, \sigma^2)` | $\mathcal{N}(\mu, \sigma^2)$ |



</details>

<details>
<summary><strong>LaTeX Fonts</strong></summary>

| Name           | Command     | Example                  | Result  |
|----------------|-------------|--------------------------|---------|
| Bold           | `\mathbf{}` | `\mathbf{x^{2}}` | $\mathbf{x^{2}}$ |
| Blackboard Bold| `\mathbb{}` | `\mathbb{E}` | $\mathbb{E}$ |

</details>


<!-- 
# Bibliography Management

## Principle 2: Let the Computer Do the Work -->

<!-- 
-  Why use software to manage your references? 
 -  Let the computer do the work! -->

## Takeaways

- You'll need a little of both LaTeX and Quarto for upcoming problem sets. 
 - Mason tends to use Quarto with LaTeX math and packages. 
 - Patrick and many others in the department use primarily LaTeX for its flexibility while using Quarto for slides or other uses. 
- The primary tool of use is up to you, but picking one and getting familiar with it will significantly help future you. 
- Regardless, learning LaTeX math will make typing equations much easier. 
- Consult the references folder on GitHub for templates of both types of documents. 

## References

::: {#refs}
:::