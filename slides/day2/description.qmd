---
title: "Description"
subtitle: "Introduction to Graduate Research"
format: 
  clean-revealjs:
    echo: true
  html-math-method:
    method: mathjax
    url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
author:
  - name: Mason Auten
    email: mason.auten@vanderbilt.edu
    affiliations: Vanderbilt University
  - name: Patrick Buhr
    email: patrick.buhr@vanderbilt.edu
    affiliations: Vanderbilt University
date: today
self-contained: true
---

## Where are we? Where are we going?

::: fragment
-   Today: Descriptive Statistics
:::

::: fragment
-   Thursday: Data Manipulation
:::

::: fragment
-   Friday: Data Visualization
:::

## Today's Agenda

“Correlation doesn't equal causation”

...but all our statistical evidence about causation is built on correlations.

We need to understand the basics of statistical correlations:

-   Mean and median\
-   Variance and standard deviation\
-   Covariance and correlation

## A Note on Notation

We will introduce quite a bit of notation today. We have tried to keep notation to a minimum, but it is often necessary to communicate complex ideas quickly and precisely.

Notation today:

-   $Y$ = typically the dependent variable.\
-   $n$ = the total number of observations in sample $n$.\
-   $i$ = an individual within the sample $n$.\
-   $Y_i$ = the value of variable $Y$ for individual $i$.\
-   $\sum_{i=1}^n Y_i$ = the sum of all values of $Y$ for each individual $i$ in sample $n$.\
-   $\bar{Y}$ (“Y-bar”) = mean of sample $Y$.

## Why Description Matters

**Quantitative political science** seeks to understand political phenomena through numerical representation.

-   Description is the foundation of all statistical work.\
-   It tells us: *What can we say about the data we have?*\
-   Before inference or prediction, we need to understand our data.

## Loading in Data

```{r}
#| echo: false
#| message: false
library("tidyverse")

## Only output five tibble rows by default
options(tibble.print_min = 5,
        tibble.max_extra_cols = 3)
```

:::::: columns
::: {.column width="50%"}
1.  Navigate to your working directory.
2.  Download the `congress_data.csv` file and put it there
3.  Set as R's working directory
    -   Windows: `setwd('C:/path/to/directory')`
    -   Mac: `setwd('~/path/to/directory')`
    -   ... or just navigate in RStudio and set it that way
4.  Check that `congress_data <- read_csv("congress_data.csv")` works
:::

::: {.column width="5%"}
:::

::: {.column width="45%"}
```{r}
#| echo: false
options(width = 42)
```

```{r}
#| echo: TRUE
congress_data <- read_csv("congress_data.csv")

print(congress_data)
```
:::
::::::

## The Need for Description

### Can't we just look at the data?

Suppose we wanted to see whether there is a relationship between a legislator's seniority in Congress (the number of terms served) and the vote share she received in the last election.

We can just look at the data:

```{r}
#| echo: false
cor(congress_data$seniority, congress_data$vote_share, use = "complete.obs")
congress_data %>%
  filter(year>=2023) %>%
  arrange(desc(seniority)) %>%
  select(name, seniority, vote_share) %>%
  slice_head(n = 25)
```

## The Need for Description

### Maybe we use a frequency table?

```{r}
#| echo: false
congress_data %>%
  count(seniority) %>%
  arrange(desc(n)) %>%
  slice_head(n = 20)
```

## The Need for Description

### Maybe we use a frequency table?

```{r}
#| echo: false
congress_data %>%
  count(vote_share) %>%
  arrange(desc(n)) %>%
  slice_head(n = 20)
```

## The Need for Description

### Detail versus parsimony

Fundamental tension in quantitative analysis: **detail** vs **parsimony**.

-   Seniority: mean is 5.24
-   Vote Share: mean is 67.5

Compare averages across categories:

-   (Mean Seniority $\mid$ Republican) = 4.66
-   (Mean Seniority $\mid$ Democrat) = 5.72

Summarize relationships across multiple continuous variables:

-   Correlation between Seniority and Vote Share = 0.24

# Central Tendency

## Central Tendency

**Central tendency** refers to measures that identify the center of a dataset.

Continuous and ordinal variables:

-   **Mean:** average value.\
-   **Median:** value at ≥50% of the distribution.\
-   **Mode:** more frequently occurring value.

Categorical variables: report as tables or recode in binary.

## Mean

### Formula for Mean

$$
\bar{Y} = \frac{\sum_{i=1}^n Y_i}{n}
$$

Components:

-   $\bar{Y}$ (“Y-bar”) = mean of $Y$
-   $\sum_{i=1}^n Y_i$ = the sum of all values of $Y$\
-   $n$ = the total number of observations

## Mean

### Expected value

A variable $Y_i$ is a numerical attribute of unit $i$.

-   e.g. the most recent vote share of legislator $i$.

The average $\bar{Y}$ is out best guess of the value for a variable for any given individual in the population.

-   e.g. average vote share among all legislators.

::: callout-tip
## Averages for binary variables

For binary variables, the average is the proportion of the population where the variable = 1.

For example, for a binary variable for whether a legislator is in the majority, if $\bar{Y} = 0.56$, then 56% of the sample is in the majority and 44% are in the minority.
:::

## Mean

### Properties of Mean

**1. Zero-Sum Property**

$$
\sum_{i=1}^n (Y_i - \bar{Y}) = 0
$$

**2. Least-Squares Property**\
$$
\sum_{i=1}^n (Y_i - \bar{Y})^2 \;<\; 
\sum_{i=1}^n (Y_i - c)^2
\quad \forall\; c \neq \bar{Y}
$$

## Mean

### Calculating Mean in R

It is very easy to calculate mean in R:

```{r}
mean(congress_data$vote_share, na.rm=T)
```

Or conditional means:

```{r}
mean(congress_data$vote_share[congress_data$democrat == 1], na.rm=T)
```

::: callout-tip
## Removing NAs

The command `na.rm=T` instructs R to not consider NAs in calculating mean (i.e. remove NAs is TRUE)
:::

## Median

The **median** is the middle value of a variable when the observations are ordered from smallest to largest.

It divides the distribution into two equal halves: 50% of values are below the median and 50% are above it.

-   If there is an **odd** number of observations, the median is the middle value.\

-   If there is an **even** number of observations, the median is the average of the two middle values.

**Key advantage:** The median is resistant to outliers and skewed data.

## Mean vs. Median

### Distribution of Age

```{r}
#| echo: false
congress_data$age <- congress_data$year - congress_data$born
theme_set(theme_bw(base_size = 16))

ggplot(congress_data, aes(x = age)) +
  geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  labs(
    x = "Age at Start of Congress",
    y = "Count",
  )
```

## Mean vs. Median

### Mean Age = 53.9 years

```{r}
#| echo: false

mean_age <- mean(congress_data$age, na.rm = TRUE)

ggplot(congress_data, aes(x = age)) +
  geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  geom_vline(aes(xintercept = mean_age),
             color = "indianred", linetype = "solid", size = 1) +
  labs(
    x = "Age at Start of Congress",
    y = "Count",
  )
```

## Mean vs. Median

### Median Age = 54 years

```{r}
#| echo: false

median_age <- median(congress_data$age, na.rm = TRUE)

ggplot(congress_data, aes(x = age)) +
  geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  geom_vline(aes(xintercept = mean_age),
             color = "indianred", linetype = "solid", size = 1) +
   geom_vline(aes(xintercept = median_age),
             color = "steelblue", linetype = "solid", size = 1) +
  labs(
    x = "Age at Start of Congress",
    y = "Count",
  )
```

## Mean vs. Median

### Distribution of Vote Share

```{r}
#| echo: false

ggplot(congress_data, aes(x = vote_share)) +
  geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  labs(
    x = "Vote Share to Enter Congress",
    y = "Count",
  )
```

## Mean vs. Median

### Mean Vote Share = 67.5 percent

```{r}
#| echo: false

mean_vote_share <- mean(congress_data$vote_share, na.rm = TRUE)


ggplot(congress_data, aes(x = vote_share)) +
  geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  geom_vline(aes(xintercept = mean_vote_share),
             color = "indianred", linetype = "solid", size = 1) +
  labs(
    x = "Vote Share to Enter Congress",
    y = "Count",
  )
```

## Mean vs. Median

### Median Vote Share = 65 percent

```{r}
#| echo: false
median_vote_share <- median(congress_data$vote_share, na.rm = TRUE)

ggplot(congress_data, aes(x = vote_share)) +
  geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  geom_vline(aes(xintercept = mean_vote_share),
             color = "indianred", linetype = "solid", size = 1) +
   geom_vline(aes(xintercept = median_vote_share),
             color = "steelblue", linetype = "solid", size = 1) +
  labs(
    x = "Vote Share to Enter Congress",
    y = "Count",
  )
```

## What about a binary variable?

### Distribution of majority party status

```{r}
#| echo: false
median_majority <- median(congress_data$majority, na.rm = TRUE)
mean_majority <- mean(congress_data$majority, na.rm = TRUE)

ggplot(congress_data, aes(x = majority)) +
  geom_histogram(binwidth = 0.5, fill = "grey", color = "black") +
  labs(
    x = "Binary Indicator for Majority Party Status",
    y = "Count",
  )
```

## What about a binary variable?

### Mean is 0.56

```{r}
#| echo: false
median_majority <- median(congress_data$majority, na.rm = TRUE)
mean_majority <- mean(congress_data$majority, na.rm = TRUE)

ggplot(congress_data, aes(x = majority)) +
  geom_histogram(binwidth = 0.5, fill = "grey", color = "black") +
  geom_vline(aes(xintercept = mean_majority),
             color = "indianred", linetype = "solid", size = 1) +
  labs(
    x = "Binary Indicator for Majority Party Status",
    y = "Count",
  )
```

## What about a binary variable?

### Median is 1

```{r}
#| echo: false
median_majority <- median(congress_data$majority, na.rm = TRUE)
mean_majority <- mean(congress_data$majority, na.rm = TRUE)

ggplot(congress_data, aes(x = majority)) +
  geom_histogram(binwidth = 0.5, fill = "grey", color = "black") +
  geom_vline(aes(xintercept = mean_majority),
             color = "indianred", linetype = "solid", size = 1) +
   geom_vline(aes(xintercept = median_majority),
             color = "steelblue", linetype = "solid", size = 1) +
  labs(
    x = "Binary Indicator for Majority Party Status",
    y = "Count",
  )
```

# Dispersion

## Variance

Variance is the typical (squared) distance between an observation and the mean:

$$
\mathrm{var}(Y) = s^2 = \frac{\sum_{i=1}^n (Y_i - \bar{Y})^2}{n}
$$

-   Calculate each observation’s distance from the mean: $(Y_i - \bar{Y})$\
-   Square the distances: $(Y_i - \bar{Y})^2$
    -   Now they’re all positive.\
    -   Bigger differences matter more.\
-   Take the average of the squared differences.

## Variance

### Calculating in R

```{r}
var(congress_data$vote_share, na.rm=T)
```

::: callout-warning
## `N-1` correction

`R` will automatically increase reported variance by dividing by $n-1$ instead of $n$. We rarely work with small enough datasets for this to matter.
:::

## Standard Deviation

$$
\mathrm{sd}(Y) = s = \sqrt{\frac{\sum_{i=1}^n (Y_i - \bar{Y})^2}{n}}
$$

Assuming a normal distribution:

-   68% of observations will be within one standard deviation.
-   95% of observations will be within two standard deviations.
-   99.5% of observations will be within three standard deviations.

```{r}
sd(congress_data$age, na.rm=T)
```

## Visualizing Standard Deviation

### Mean is 53.9 and standard deviation is 10.88

```{r}
#| echo: false
mean_age <- mean(congress_data$age, na.rm = TRUE)
sd_age <- sd(congress_data$age, na.rm = TRUE)

# 1 SD
ggplot(congress_data, aes(x = age)) +
  geom_histogram(binwidth = 1, color = "black", fill = "grey") +
   geom_vline(aes(xintercept = mean_age),
             color = "indianred", linetype = "solid", size = 1) +
  labs( x = "Age", y = "Count")+
  theme(legend.position = "none")

```

## Visualizing Standard Deviation

### 68% of observations are between 43 and 65

```{r}
#| echo: false

ggplot(congress_data, aes(x = age, 
                          fill = abs(age - mean_age) <= 1 * sd_age)) +
  geom_histogram(binwidth = 1, color = "black") +
   geom_vline(aes(xintercept = mean_age),
             color = "indianred", linetype = "solid", size = 1) +
  scale_fill_manual(values = c("TRUE" = "steelblue", "FALSE" = "grey")) +
  labs( x = "Age", y = "Count", fill = NULL)+
  theme(legend.position = "none")

```

## Visualizing Standard Deviation

### 95% of observations are between 32 and 76

```{r}
#| echo: false

ggplot(congress_data, aes(x = age, 
                          fill = abs(age - mean_age) <= 2 * sd_age)) +
  geom_histogram(binwidth = 1, color = "black") +
   geom_vline(aes(xintercept = mean_age),
             color = "indianred", linetype = "solid", size = 1) +
  scale_fill_manual(values = c("TRUE" = "steelblue", "FALSE" = "grey")) +
  labs(x = "Age", y = "Count", fill = NULL)+
  theme(legend.position = "none")

```

## Visualizing Standard Deviation

### 99.5% of observations are between 21 and 87

```{r}
#| echo: false

ggplot(congress_data, aes(x = age, 
                          fill = abs(age - mean_age) <= 3 * sd_age)) +
  geom_histogram(binwidth = 1, color = "black") +
   geom_vline(aes(xintercept = mean_age),
             color = "indianred", linetype = "solid", size = 1) +
  scale_fill_manual(values = c("TRUE" = "steelblue", "FALSE" = "grey")) +
  labs(x = "Age", y = "Count", fill = NULL) +
  theme(legend.position = "none")
```

# 10 Minute Break

# Bivariate Description

## Covariance

### How much above-average $X_i$ predicts above-average $Y_i$

Suppose we're now considering the relationship between two variables, $X_i$ and $Y_i$.

$$
\mathrm{cov}(X, Y) = \frac{\sum_{i=1}^n (X_i - \bar{X})(Y_i - \bar{Y})}{n}
$$

-   If $X$ and $Y$ tend to move together, positives $\times$ positives $\rightarrow$ positive covariance.\
-   If $X$ and $Y$ tend to move opposite, positives $\times$ negative $\rightarrow$ negative covariance.\
-   If there’s no clear relationship, positives and negatives cancel out and $\rightarrow$ covariance $\approx$ 0.

## Covariance

### The trouble with covariance

Covariance is measured in units of $X_i$ $\times$ units of $Y_i$

```{r}
cov(congress_data$vote_share, congress_data$seniority, use = "complete")
```

::: callout-warning
## Accounting for NA

Use `use = "complete"` instead of `na.rm=T` to only use where both variables are not NA.
:::

## Correlation

A more common measure of bivariate relationship is the correlation coefficient: $$\mathrm{cor}(X,Y) = \frac{\mathrm{cov}(X,Y)}{\mathrm{sd}(X)\,\mathrm{sd}(Y)}$$

Only takes values between -1 and 1.

**Sign**: direction of relationship 
- $\mathrm{cor}(X,Y)>0$ $\rightarrow$ positive relationship
- $\mathrm{cor}(X,Y)<0$ $\rightarrow$ negative relationship
**Magnitude**: strength of relationship
-   $\mathrm{cor}(X,Y)$ close to 0: not very predictive.
-   $\mathrm{cor}(X,Y)$ close to -1 or 1: highly predictive.

## Correlation

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 7

set.seed(4023)
n_fake <- 1000
cor_list <- c(-1, -0.9, -0.5, -0.2, 0, 0.2, 0.5, 0.9, 1)
fake_x <- rnorm(n_fake)
fake_z <- rnorm(n_fake)
tibble(fake_x = rep(fake_x, length(cor_list)),
       fake_z = rep(fake_z, length(cor_list)),
       correlation = rep(cor_list, each = n_fake)) |>
  mutate(fake_y = correlation * fake_x + sqrt(1 - correlation^2) * fake_z,
         fake_y = 1 + 0.5 * fake_y,
         correlation = factor(correlation,
                              levels = cor_list,
                              labels = str_c("correlation = ", cor_list))) |>
  ggplot(aes(x = fake_x, y = fake_y)) +
  geom_point(alpha = 0.25) +
  labs(y = "Y", x = "X")+
  facet_wrap(~ correlation)
```
## Correlation

Correlation calculated in R the same way as covariance:
```{r}
cor(congress_data$seniority, congress_data$vote_share, use = "complete")
```
Correlation is 0.237, both positive and substantial. 

::: callout-warning

## Does greater seniority *cause* higher vote share?
- Maybe votters reward more experience and greater ability to secure benefits.
- Selection: the only people who can build seniority are in safe districts.
- Confounding: Democrats tend to hold safer districts where they can build long careers.

:::

